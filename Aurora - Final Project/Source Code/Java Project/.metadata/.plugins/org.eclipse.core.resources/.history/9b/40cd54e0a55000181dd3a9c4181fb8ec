package aurora.retrieval;
import java.sql.Statement;
import java.util.ArrayList;

import aurora.model.Document;

/**
 * 
 * Document Remover - Calculates and updates the vector space model whenever a document is removed.
 *
 */

public class DocumentRemover extends VSMUpdater {

		private ArrayList<String> vsmUpdates = new ArrayList<String>();
		private ArrayList<String> termDeletes = new ArrayList<String>();
		
		
		public DocumentRemover(Statement statement) {
			super(statement);
		}
		
		
		public void remove(Document doc){
			ArrayList<Term> oldTerms = getDocTerms(doc.getID());
			String sql = "DELETE FROM VSM_Table WHERE DocumentID=" + doc.getID();
			updateDatabase(sql);
			  
			for(Term oldTerm : oldTerms) {
				checkTerm(oldTerm);
			}
			
			batchTermDelete();
			batchVSMUpdate();
			
		}
		
	
		private void checkTerm(Term oldTerm){
			int docFreq = getDocFrequency(oldTerm.getId());
			if(docFreq <= 0) {
				termDeletes.add(String.valueOf(oldTerm.getId()));
			} else {
				updateTermAxis(oldTerm.getId());
			}
			
		}
		
		private void updateTermAxis(int termId){
			ArrayList<Integer> documents = getRelatedDocs(termId);
			for(int docId : documents) {
				double TFIDF = calculateTFIDF(termId, docId, getTermFrequency(termId, docId), 0);
				vsmUpdates.add("(" + termId + ", " + docId + ", " + getTermFrequency(termId, docId) + ", " + TFIDF + ")");
			}
		}
		
		
		public void batchVSMUpdate() {
			if(vsmUpdates.size() > 0) {
			String sql = "INSERT INTO REMOVE_Table VALUES ";
			for(int i = 0; i < vsmUpdates.size() - 1; i++) {
				sql = sql + vsmUpdates.get(i) + ", ";
			}
			sql = sql + vsmUpdates.get(vsmUpdates.size() - 1);
			updateDatabase(sql);
			
			 sql = "UPDATE VSM_TABLE SET TFIDF = (SELECT TFIDF from UPDATE_Table WHERE TermID = VSM_TABLE.TermID AND DocumentID = VSM_Table.DocumentID) WHERE Exists (SELECT TermID From UPDATE_TABLE WHERE TermID = VSM_Table.TermID AND DocumentID = VSM_Table.DocumentID)";
			  updateDatabase(sql);
			  sql = "DELETE FROM REMOVE_Table";
			  updateDatabase(sql);
			  vsmUpdates = new ArrayList<String>();
			}
		}
		
		
		public void batchTermDelete() {
			
			if(termDeletes.size() > 0) {
				String sql = "DELETE FROM TERM_Table WHERE TermID in (";
				for(int i = 0; i < termDeletes.size() - 1; i++) {
					sql = sql + termDeletes.get(i) + ", ";
				}
				sql = sql + termDeletes.get(termDeletes.size() - 1) + ")";
				updateDatabase(sql);
				
				sql = "DELETE FROM PROFILE_Table WHERE TermID in (";
				for(int i = 0; i < termDeletes.size() - 1; i++) {
					sql = sql + termDeletes.get(i) + ", ";
				}
				sql = sql + termDeletes.get(termDeletes.size() - 1) + ")";
				updateDatabase(sql);
			}
			termDeletes = new ArrayList<String>();
		}
		


}
