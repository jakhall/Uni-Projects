package aurora.controller;

import java.awt.Image;
import java.awt.image.RenderedImage;
import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.net.URL;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.Random;

import javax.imageio.ImageIO;

import aurora.model.Document;
import aurora.model.ManageModel;
import aurora.model.Profile;
import aurora.model.RegisterModel;
import aurora.model.SearchModel;
import aurora.model.Session;
import aurora.view.BasePanel;
import aurora.view.HomePanel;
import aurora.view.ProfilePanel;
import aurora.view.SearchPanel;

/**
 * 
 * Register Controller - controls the register view, allows a new user to register 
 * by entering their personal details.
 * 
 */

public class RegisterController extends BaseController {

		private RegisterModel theModel;
		private int resultNumber;
		private Profile newUser;
		private Image profileImage;
		
		
		//Stores the database connection, creates a new user object and register model.
		//allocates the new users default icon colour.
		
		public RegisterController(Connection conn) {
			theModel = new RegisterModel(conn);	
			newUser = new Profile();
			newUser.setDefaultColor(randomColor());
		}
		
		
		//createUser - sets the users username and password. 
		public void createUser(String username, String password) {
			newUser.setUsername(username);
			newUser.setPassword(password);
		}
		//setDetails - sets the users other personal details.
		public void setDetails(String t, int a, String f, String l, String e) {
			newUser.setDetails(t, a, f, l);
			newUser.setEmail(e);
		}
		
		
		//addProfileIcon - finds the users profile folder, saves the set profile image to that locations. 
		public void addProfileIcon() {	
			String s = File.separator;
			String url = System.getenv("APPDATA") + s + "Aurora" + s + "profile_data"
						 + s + newUser.getUsername() + s + "profile" + s + "icon.png";
			try {
				ImageIO.write((RenderedImage)profileImage, "png", new File(url));
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		
		
		//setImage - sets the current profile image.
		
		public void setImage(Image img) {
			profileImage = img;
		}
		
		
		//randomColor - selected a random colour from a determines list. 
		
		private String randomColor() {
			String[] colors = {"blue", "red", "green", "yellow", "magenta", "orange"};
			Random rand = new Random();
			int index = rand.nextInt((5 - 0) + 1) + 0;
			return colors[index];
		}
		
		public String getIconColor() {
			return newUser.getDefaultColor();
		}
		
		
		public boolean validatePassword(String pass, String confirm) {
			if((!pass.equals("")) && (pass.equals(confirm))) {
				return true;
			}
			
			System.out.println("Password Invalid");
			
			return false;
		}
		
		
		public void Register() {
			
				Profile registeredUser = theModel.registerUser(newUser);
				
				if(profileImage != null) {
					addProfileIcon();
				}
				
				theSession = theModel.createSession(registeredUser);
				HomeController hc = new HomeController(theSession);
				hc.setFrame(theFrame);
				HomePanel hp = new HomePanel(hc);
				theFrame.setContentPane(hp);
				theFrame.pack();
		}
		
}