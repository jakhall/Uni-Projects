package aurora.view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.net.URL;

import javax.imageio.ImageIO;
import javax.swing.*;
import aurora.controller.BaseController;
import aurora.controller.HomeController;
import aurora.controller.LoginController;
import aurora.controller.ProfileController;
import aurora.model.Document;
import aurora.model.LoginModel;
import aurora.model.Profile;
import java.awt.Panel;
import java.awt.ScrollPane;
import java.awt.Dimension;
import javax.swing.border.MatteBorder;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import java.awt.Color;
import javax.swing.GroupLayout.Alignment;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.Font;

public class HomePanel extends MainPanel {
	
	protected HomeController theController;
	protected JPanel basePanel;
	
	
	protected JTextField fldUsername;
	protected JPanel profilePanel;
	protected JLabel lblProfile;
	protected JLabel lblUserAurora;
	protected JLabel lblObservers;
	protected JLabel lblObserving;
	protected JLabel lblUsername;
	protected JButton btnView;
	protected JScrollPane auroraScroll;
	protected JScrollPane observingScroll;
	protected JScrollPane observerScroll;
	protected JList documentList;
	protected JList observerList;
	protected JList observingList;
	protected JButton btnRemove;
	protected JButton btnAdd;
	private JButton btnManage;
	private JLabel profileIcon;
	private JButton btnEdit;
	
	public HomePanel(HomeController homeController) {
		super(homeController);
		theController = homeController;
		
		setupPanel();
		setupData();
		setupListeners();
	}
	

	protected void setupPanel() {
		super.setupPanel();
		this.setPreferredSize(new Dimension(500, 600));
		SpringLayout springLayout = (SpringLayout) contentPanel.getLayout();
		
		profilePanel = new JPanel();
		springLayout.putConstraint(SpringLayout.WEST, profilePanel, 56, SpringLayout.WEST, contentPanel);
		springLayout.putConstraint(SpringLayout.EAST, profilePanel, -67, SpringLayout.EAST, contentPanel);
		profilePanel.setBorder(new MatteBorder(1, 1, 1, 1, (Color) new Color(0, 0, 0)));
		contentPanel.add(profilePanel);
		SpringLayout sl_profilePanel = new SpringLayout();
		profilePanel.setLayout(sl_profilePanel);
		
		lblProfile = new JLabel("Profile");
		springLayout.putConstraint(SpringLayout.WEST, lblProfile, 56, SpringLayout.WEST, contentPanel);
		springLayout.putConstraint(SpringLayout.SOUTH, lblProfile, -414, SpringLayout.SOUTH, contentPanel);
		springLayout.putConstraint(SpringLayout.NORTH, profilePanel, 6, SpringLayout.SOUTH, lblProfile);
		contentPanel.add(lblProfile);
		
		lblUserAurora = new JLabel("Aurora");
		springLayout.putConstraint(SpringLayout.SOUTH, profilePanel, -21, SpringLayout.NORTH, lblUserAurora);
		springLayout.putConstraint(SpringLayout.WEST, lblUserAurora, 56, SpringLayout.WEST, contentPanel);
		contentPanel.add(lblUserAurora);
		
		lblObserving = new JLabel("Observing");
		springLayout.putConstraint(SpringLayout.NORTH, lblObserving, 0, SpringLayout.NORTH, lblUserAurora);
		contentPanel.add(lblObserving);
		
		lblObservers = new JLabel("Observers");
		springLayout.putConstraint(SpringLayout.WEST, lblObservers, 0, SpringLayout.WEST, lblObserving);
		contentPanel.add(lblObservers);
		
		btnView = new JButton("View");
		springLayout.putConstraint(SpringLayout.WEST, btnView, 56, SpringLayout.WEST, contentPanel);
		contentPanel.add(btnView);
		
		auroraScroll = new JScrollPane();
		springLayout.putConstraint(SpringLayout.NORTH, auroraScroll, 212, SpringLayout.NORTH, contentPanel);
		springLayout.putConstraint(SpringLayout.WEST, auroraScroll, 56, SpringLayout.WEST, contentPanel);
		springLayout.putConstraint(SpringLayout.EAST, auroraScroll, -26, SpringLayout.WEST, lblObservers);
		springLayout.putConstraint(SpringLayout.SOUTH, lblUserAurora, -6, SpringLayout.NORTH, auroraScroll);
		springLayout.putConstraint(SpringLayout.NORTH, btnView, 6, SpringLayout.SOUTH, auroraScroll);
		springLayout.putConstraint(SpringLayout.SOUTH, auroraScroll, -112, SpringLayout.SOUTH, contentPanel);
		auroraScroll.setBorder(new MatteBorder(1, 1, 1, 1, (Color) new Color(0, 0, 0)));
		contentPanel.add(auroraScroll);
		
		lblUsername = new JLabel("Username:");
		sl_profilePanel.putConstraint(SpringLayout.NORTH, lblUsername, 13, SpringLayout.NORTH, profilePanel);
		sl_profilePanel.putConstraint(SpringLayout.WEST, lblUsername, 96, SpringLayout.WEST, profilePanel);
		profilePanel.add(lblUsername);
		
		fldUsername = new JTextField();
		sl_profilePanel.putConstraint(SpringLayout.NORTH, fldUsername, -3, SpringLayout.NORTH, lblUsername);
		sl_profilePanel.putConstraint(SpringLayout.WEST, fldUsername, 6, SpringLayout.EAST, lblUsername);
		sl_profilePanel.putConstraint(SpringLayout.EAST, fldUsername, -125, SpringLayout.EAST, profilePanel);
		profilePanel.add(fldUsername);
		fldUsername.setColumns(10);
		
		observingScroll = new JScrollPane();
		springLayout.putConstraint(SpringLayout.NORTH, observingScroll, 8, SpringLayout.SOUTH, lblObserving);
		springLayout.putConstraint(SpringLayout.SOUTH, observingScroll, -21, SpringLayout.NORTH, lblObservers);
		springLayout.putConstraint(SpringLayout.WEST, lblObserving, 0, SpringLayout.WEST, observingScroll);
		springLayout.putConstraint(SpringLayout.WEST, observingScroll, 251, SpringLayout.WEST, contentPanel);
		springLayout.putConstraint(SpringLayout.EAST, observingScroll, -67, SpringLayout.EAST, contentPanel);
		observingScroll.setBorder(new MatteBorder(1, 1, 1, 1, (Color) new Color(0, 0, 0)));
		
		documentList = new JList();
		auroraScroll.setViewportView(documentList);
		contentPanel.add(observingScroll);
		
		observingList = new JList();
		observingScroll.setViewportView(observingList);
		
		JScrollPane observerScroll = new JScrollPane();
		springLayout.putConstraint(SpringLayout.WEST, observerScroll, 251, SpringLayout.WEST, contentPanel);
		springLayout.putConstraint(SpringLayout.EAST, observerScroll, -67, SpringLayout.EAST, contentPanel);
		springLayout.putConstraint(SpringLayout.EAST, btnView, -26, SpringLayout.WEST, observerScroll);
		springLayout.putConstraint(SpringLayout.SOUTH, lblObservers, -6, SpringLayout.NORTH, observerScroll);
		observerScroll.setBorder(new MatteBorder(1, 1, 1, 1, (Color) new Color(0, 0, 0)));
		springLayout.putConstraint(SpringLayout.NORTH, observerScroll, 330, SpringLayout.NORTH, contentPanel);
		springLayout.putConstraint(SpringLayout.SOUTH, observerScroll, -49, SpringLayout.SOUTH, contentPanel);
		contentPanel.add(observerScroll);
		
		observerList = new JList();
		observerScroll.setViewportView(observerList);
		
		btnAdd = new JButton("Add");
		springLayout.putConstraint(SpringLayout.NORTH, btnAdd, 7, SpringLayout.SOUTH, btnView);
		springLayout.putConstraint(SpringLayout.WEST, btnAdd, 56, SpringLayout.WEST, contentPanel);
		contentPanel.add(btnAdd);
		
		btnRemove = new JButton("Remove");
		springLayout.putConstraint(SpringLayout.EAST, btnAdd, -6, SpringLayout.WEST, btnRemove);
		springLayout.putConstraint(SpringLayout.NORTH, btnRemove, 6, SpringLayout.SOUTH, btnView);
		springLayout.putConstraint(SpringLayout.EAST, btnRemove, -27, SpringLayout.WEST, observerScroll);
		contentPanel.add(btnRemove);
		
		btnManage = new JButton("Manage");
		springLayout.putConstraint(SpringLayout.NORTH, btnManage, 1, SpringLayout.NORTH, lblUserAurora);
		springLayout.putConstraint(SpringLayout.WEST, btnManage, 34, SpringLayout.EAST, lblObserving);
		springLayout.putConstraint(SpringLayout.EAST, btnManage, -67, SpringLayout.EAST, contentPanel);
		
		profileIcon = new JLabel("");
		sl_profilePanel.putConstraint(SpringLayout.NORTH, profileIcon, 1, SpringLayout.NORTH, lblUsername);
		sl_profilePanel.putConstraint(SpringLayout.SOUTH, profileIcon, 54, SpringLayout.SOUTH, lblUsername);
		sl_profilePanel.putConstraint(SpringLayout.EAST, profileIcon, 80, SpringLayout.WEST, profilePanel);
		profileIcon.setBorder(new MatteBorder(1, 1, 1, 1, (Color) new Color(0, 0, 0)));
		sl_profilePanel.putConstraint(SpringLayout.WEST, profileIcon, 10, SpringLayout.WEST, profilePanel);
		profilePanel.add(profileIcon);
		btnManage.setFont(new Font("Tahoma", Font.PLAIN, 9));
		contentPanel.add(btnManage);
		
		btnEdit = new JButton("Edit");
		springLayout.putConstraint(SpringLayout.NORTH, btnEdit, 0, SpringLayout.NORTH, lblProfile);
		springLayout.putConstraint(SpringLayout.EAST, btnEdit, 0, SpringLayout.EAST, profilePanel);
		btnEdit.setFont(new Font("Tahoma", Font.PLAIN, 9));
		contentPanel.add(btnEdit);
		
		
	}
	
	public void setupData() {
		super.setupData();
		Profile user = theController.getUser();
	    fldUsername.setText(user.getUsername());
		backBtn.setVisible(false);
	    String[] docTitles = theController.getUserDocsTitle();
	    documentList.setListData(docTitles);
	    
	    String[] observers = theController.getObserversUsername();
	    observerList.setListData(observers);
	    
	    String[] observing = theController.getObservingUsername();
	    observingList.setListData(observing);
	    
	    lblUserAurora.setText("Aurora: (" + theController.getNumOfDocuments() + ")");
	    lblObservers.setText("Observers: (" + theController.getNumOfObservers() + ")");
	    lblObserving.setText("Observing: (" + theController.getNumOfObserving() + ")");
	    
	    try {
			updateProfileIcon();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	
	private void updateProfileIcon() throws IOException {
		
		String s =  File.separator;
		
		String dir = System.getenv("APPDATA") + s + "Aurora" + s + "profile_data" + s 
					+ theController.getUser().getUsername() + s + "profile" + s + "icon.png";
		
		File imageFile = new File(dir);
		
		BufferedImage icon;
		
		if(imageFile.exists()) {
			icon = ImageIO.read(imageFile);
		} else {
			String url = "/default_data/profile_image/default_" + theController.getUser().getDefaultColor() + ".png";
			icon = ImageIO.read(HomePanel.class.getResource(url));
		}
		profileIcon.setIcon(new ImageIcon(icon.getScaledInstance(70, 70, Image.SCALE_DEFAULT)));

	}
	
	protected void setupListeners() {
		super.setupListeners();
		btnView.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent click) {
				theController.viewDocument(documentList.getSelectedIndex());

			}
		});
		
		btnAdd.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent click) {
				theController.addDocument();
				lblUserAurora.setText("Aurora: (" + theController.getNumOfDocuments() + ")");
				documentList.setListData(theController.getUserDocsTitle());
			}
		});
		
		btnRemove.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent click) {
				
				theController.removeDocument(documentList.getSelectedIndex());
				lblUserAurora.setText("Aurora: (" + theController.getNumOfDocuments() + ")");
				documentList.setListData(theController.getUserDocsTitle());
			}
		});
		
		btnManage.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent click) {
				theController.manageObserving();
			}
		});
		
		btnEdit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent click) {
				theController.editDetails();
			}
		});
		
		
	    observerList.addListSelectionListener(new ListSelectionListener() {
			public void valueChanged(ListSelectionEvent click) {
				theController.viewObserver(observerList.getSelectedIndex());
			}
	      });
	    
	    observingList.addListSelectionListener(new ListSelectionListener() {
			public void valueChanged(ListSelectionEvent click) {
				theController.viewObserving(observingList.getSelectedIndex());
			}
	      });
	    
	    
	}
}